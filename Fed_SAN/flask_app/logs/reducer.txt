 * Serving Flask app 'Reducer.reducer_rest_service' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
Client with details : id = ad7c0f88-2a51-417f-823a-fed216777687, port = 49222, hostname = 192.168.29.128 trying to connect
Client with detials : id = ad7c0f88-2a51-417f-823a-fed216777687, port = 49222, hostname = 192.168.29.128 connected
[reducer_rest_service] /training -> request for training received
[reducer_rest_service] /training -> Starting training now
0
[0, 689]
[0, 689]
[reducer_rest_service] func train() -> Client Data set !
------ Round  0  -----
Round start requests send to the clients successfully
Total clients that started the training are 1
[reducer_rest_service] func train() -> Clients in training currently are : 1
Printing all client's status : 
Client [192.168.29.128:49222] : training
[reducer_rest_service] /roundCompletedByClient -> Round completion message received from client
[reducer_rest_service] /roundCompletedByClient -> Prev status = training
[reducer_rest_service] /roundCompletedByClient -> New status = idle
Client -  192.168.29.128:49222  completed round  0
[reducer_rest_service] func train() -> Clients in training currently are : 0
Printing all client's status : 
Client [192.168.29.128:49222] : idle
Clients in Training : 0
Total samples: 689
Clients samples: 689
[0.653663969965718, -0.27503830106204846, -0.12560861010704305]
Server Wts:  [ 0.65366397 -0.2750383  -0.12560861]
(3,)
(173, 3)
[-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, -1, -1]
Accuracy:  74.56647398843931
------ Round  1  -----
Round start requests send to the clients successfully
Total clients that started the training are 1
[reducer_rest_service] func train() -> Clients in training currently are : 1
Printing all client's status : 
Client [192.168.29.128:49222] : training
[reducer_rest_service] /roundCompletedByClient -> Round completion message received from client
[reducer_rest_service] /roundCompletedByClient -> Prev status = training
[reducer_rest_service] /roundCompletedByClient -> New status = idle
Client -  192.168.29.128:49222  completed round  1
[reducer_rest_service] func train() -> Clients in training currently are : 0
Printing all client's status : 
Client [192.168.29.128:49222] : idle
Clients in Training : 0
Total samples: 689
Clients samples: 689
[0.6536868639960624, -0.27504166810555314, -0.12561077776603033]
Server Wts:  [ 0.65368686 -0.27504167 -0.12561078]
(3,)
(173, 3)
[-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, -1, -1]
Accuracy:  74.56647398843931
------ Round  2  -----
Round start requests send to the clients successfully
Total clients that started the training are 1
[reducer_rest_service] func train() -> Clients in training currently are : 1
Printing all client's status : 
Client [192.168.29.128:49222] : training
[reducer_rest_service] /roundCompletedByClient -> Round completion message received from client
[reducer_rest_service] /roundCompletedByClient -> Prev status = training
[reducer_rest_service] /roundCompletedByClient -> New status = idle
Client -  192.168.29.128:49222  completed round  2
[reducer_rest_service] func train() -> Clients in training currently are : 0
Printing all client's status : 
Client [192.168.29.128:49222] : idle
Clients in Training : 0
Total samples: 689
Clients samples: 689
[0.6536868648209797, -0.27504166806283703, -0.12561077783710964]
Server Wts:  [ 0.65368686 -0.27504167 -0.12561078]
(3,)
(173, 3)
[-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, -1, -1]
Accuracy:  74.56647398843931
------ Round  3  -----
Round start requests send to the clients successfully
Total clients that started the training are 1
[reducer_rest_service] func train() -> Clients in training currently are : 1
Printing all client's status : 
Client [192.168.29.128:49222] : training
[reducer_rest_service] /roundCompletedByClient -> Round completion message received from client
[reducer_rest_service] /roundCompletedByClient -> Prev status = training
[reducer_rest_service] /roundCompletedByClient -> New status = idle
Client -  192.168.29.128:49222  completed round  3
[reducer_rest_service] func train() -> Clients in training currently are : 0
Printing all client's status : 
Client [192.168.29.128:49222] : idle
Clients in Training : 0
Total samples: 689
Clients samples: 689
[0.6536868648210099, -0.27504166806283126, -0.12561077783711208]
Server Wts:  [ 0.65368686 -0.27504167 -0.12561078]
(3,)
(173, 3)
[-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, -1, -1]
Accuracy:  74.56647398843931
------ Round  4  -----
Round start requests send to the clients successfully
Total clients that started the training are 1
[reducer_rest_service] func train() -> Clients in training currently are : 1
Printing all client's status : 
Client [192.168.29.128:49222] : training
[reducer_rest_service] /roundCompletedByClient -> Round completion message received from client
[reducer_rest_service] /roundCompletedByClient -> Prev status = training
[reducer_rest_service] /roundCompletedByClient -> New status = idle
Client -  192.168.29.128:49222  completed round  4
[reducer_rest_service] func train() -> Clients in training currently are : 0
Printing all client's status : 
Client [192.168.29.128:49222] : idle
Clients in Training : 0
Total samples: 689
Clients samples: 689
[0.6536868648210099, -0.27504166806283126, -0.12561077783711208]
Server Wts:  [ 0.65368686 -0.27504167 -0.12561078]
(3,)
(173, 3)
[-1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, -1, -1]
Accuracy:  74.56647398843931
[reducer_rest_service] /training -> Training call completed
